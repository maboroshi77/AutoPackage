package org.account.autopackage;

import java.util.Date;

import org.account.autopackage.recorder.ExcelRecoder;
import org.account.autopackage.svn.SVNOperKernel;
import org.account.autopackage.svn.SvnConfige;
import org.account.autopackage.util.SVNUtil;
import org.account.autopackage.vo.MultiRevisionVo;
import org.account.autopackage.vo.RecordVo;
import org.apache.log4j.Logger;

/**
 * 兰贝斯会计开发组自动打包更新包程序,根据配置工程路径，自动获取工程的SVN路径，进行打包
 * 这样程序可以适应任何MyEclipse的web工程。
 * @author 刘晓彬
 * @history: 2008-10-16 V1.0
 *           2009-06-11 V2.0 基于OO思想重构代码.
 * 
 *
 */
public class AccountAutoReadPackager {
	private static Logger log = Logger.getLogger(AccountAutoReadPackager.class);

	public static void main(String[] args) throws Exception {
		SvnConfige updateSvnConfige = new SvnConfige();
		updateSvnConfige.setSvnUserName("binbin");
		updateSvnConfige.setSvnPassword("binbin");

		
		SvnConfige dataChangeSvnConfige = new SvnConfige();
		dataChangeSvnConfige.setSvnUserName("binbin");
		dataChangeSvnConfige.setSvnPassword("binbin");
		dataChangeSvnConfige.setSvnUrl("http://192.0.0.5:8080/svn/eams");
		dataChangeSvnConfige.setSvnPath("/doc/数据库相关/数据库修改记录/EamsV5.4.txt");
		

		/* SVN要打包的版本号
		 * 支持对多个不同的版本号进行打包，通过MultiRevisionVo来支持多个版本号。
		 * addRangeRevision()  方法是增加一个版本号范围。
		 * addSinlgeRevision() 增加一个单个版本号。
		 */
		MultiRevisionVo revVo = new MultiRevisionVo();

		revVo.addRangeRevision(1312, 1315);
		//revVo.addRangeRevision(659, 661);
		//revVo.addSinlgeRevision(898);
	
		AutoPackageConfige packageConfige = new AutoPackageConfige();
		//eclipse工程的目录。
		packageConfige.setEclipseProjectPath("E:/dev/workspace6/gd-eams-533-02");
		//是否自动打包数据库更新 true,false 
		packageConfige.setNeedDataChange(true);
		//version   应用版本号,用来标识省厅版本(st)还是东莞版本(dw) setNeedDataChange(true) 时有效
		packageConfige.setPackeVersion("st");
		packageConfige.setPackagePath("E:/gx/省厅服务大厅/0906月份/");
		packageConfige.setPackageName("090610-0611省厅更新包");
		packageConfige.setUpdateSvnRec(revVo);
		
		//工程相对svn的根路径的路径
		String projectSvnPath = SVNUtil.getProjectSvnPath(packageConfige.getEclipseProjectPath());
		//根据工程路径，获取改工程对应的SVN的路径
		String svnUrl = SVNUtil.readSvnPathFromProjectPath(packageConfige.getEclipseProjectPath());
		updateSvnConfige.setSvnUrl(svnUrl);
		SVNOperKernel svn = new SVNOperKernel(updateSvnConfige);
		SVNOperKernel dataChangeSvn = new SVNOperKernel(dataChangeSvnConfige);
		
		log.info("开始进行更新包打包........");
		
		UpdateFileAutoPackager autoPackager = new UpdateFileAutoPackager(packageConfige,svn,dataChangeSvn);
		
		autoPackager.doPackageFile();
		
		log.info("更新包：\""+packageConfige.getPackageName()+"\" 打包成功 .");
		
		// 在/record目录下记录更新包打包。
		ExcelRecoder excelRecoder = new ExcelRecoder();
		
		RecordVo recVo = new RecordVo();
		recVo.setFileName(packageConfige.getPackageName());
		recVo.setOperDate(new Date());
		recVo.setSvnRevNo(packageConfige.getUpdateSvnRec().toString());
		recVo.setRev(projectSvnPath);
		
		excelRecoder.writeExcelLine(recVo);
		
		Runtime.getRuntime().exec("cmd /c explorer file:///"+packageConfige.getPackagePath());
	}
}
